definitions:
  handler.request:
    properties:
      code:
        type: string
      color:
        type: string
      created_at:
        type: string
      name:
        type: string
      price:
        type: number
      published:
        type: boolean
      stock:
        type: integer
    type: object
  web.Response:
    properties:
      code:
        type: integer
      data: {}
      error:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is an example of API with Golang
  title: Bootcamp Go W2
  version: "1.0"
paths:
  /products:
    post:
      consumes:
      - application/json
      description: store product
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: product to store
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/handler.request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.Response'
      summary: Store Product
      tags:
      - Products
  /products/:
    get:
      description: show all products
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: filter products by name
        in: query
        name: name
        type: string
      - description: filter products by color
        in: query
        name: color
        type: string
      - description: filter products by price
        in: query
        name: price
        type: number
      - description: filter products by stock
        in: query
        name: stock
        type: integer
      - description: filter products by code
        in: query
        name: code
        type: string
      - description: filter products by published
        in: query
        name: published
        type: boolean
      - description: filter products by created_at
        in: query
        name: created_at
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.Response'
      summary: Show all products
      tags:
      - Products
  /products/{product_id}:
    delete:
      consumes:
      - application/json
      description: Delete product by ID
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: product id
        in: path
        name: product_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.Response'
      summary: Delete Product
      tags:
      - Products
    get:
      consumes:
      - application/json
      description: find product by ID
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: product id
        in: path
        name: product_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.Response'
      summary: Find Product
      tags:
      - Products
    patch:
      consumes:
      - application/json
      description: update name and price of product
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: product id
        in: path
        name: product_id
        required: true
        type: integer
      - description: new name of the product to update
        in: body
        name: name
        required: true
        schema:
          $ref: '#/definitions/handler.request'
      - description: new price of the product to update
        in: body
        name: price
        required: true
        schema:
          $ref: '#/definitions/handler.request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.Response'
      summary: Update Name & Price Of Product
      tags:
      - Products
    put:
      consumes:
      - application/json
      description: update product
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: product id
        in: path
        name: product_id
        required: true
        type: integer
      - description: product to update
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/handler.request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.Response'
      summary: Update Product
      tags:
      - Products
swagger: "2.0"
