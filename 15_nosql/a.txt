
cheatsheet: https://www.mongodb.com/developer/quickstart/cheat-sheet/       //está en el practico de digitalhouse

para conectarse a la base de datos:

    use sample_restaurantes     //'switched to db sample_restaurantes'

1. ¿Cuántas colecciones tiene la base de datos?

    tiene 1 coleccion

2. ¿Cuántos documentos en cada colección? ¿Cuánto pesa cada colección?

    1. tiene 20 documentos
    2. 11.1MB

3. ¿Cuántos índices en cada colección? ¿Cuánto espacio ocupan los índices de cada colección?

    1. tiene 1 índice, es _id
    2. 4.1KB

4. Traer un documento de ejemplo de cada colección. db.collection.find(...).pretty() nos da un formato más legible.

    db.restaurantes.find({_id:ObjectId("5eb3d668b31de5d588f4294f")})

5. Para cada colección, listar los campos a nivel raíz (ignorar campos dentro de
documentos anidados) y sus tipos de datos.

    _id             ObjectId
    direccion       String
    tipo_cocina     String
    grados          Array
    nombre          String
    restaurante_id  String


Ejercicio 1: SQL

1. Devolver restaurante_id, nombre, barrio y tipo_cocina pero excluyendo _id para un documento (el
primero).

    db.restaurantes.find({_id:ObjectId("5eb3d668b31de5d588f4294f")},{_id:0, restaurante_id:1, nombre:1, barrio:1, tipo_cocina:1})

2. Devolver restaurante_id, nombre, barrio y tipo_cocina para los primeros 3 restaurantes que contengan 'Bake' en alguna parte de su nombre.

    db.restaurantes.find({nombre:/Bake/},{_id:0, restaurante_id:1, nombre:1, barrio:1, tipo_cocina:1}).limit(3)

3. Contar los restaurantes de comida (tipo_cocina) china (Chinese) o tailandesa (Thai) del barrio (barrio) Bronx. Consultar or versus in.

    db.restaurantes.find({tipo_cocina:{$in:["Chinese","Thai"]},barrio:"Bronx"}).count()


Ejercicio 2: NoSQL

1. Traer 3 restaurantes que hayan recibido al menos una calificación de grado 'A' con puntaje mayor a 20. Una misma calificación debe cumplir con ambas condiciones simultáneamente; investigar el operador elemMatch.

    db.restaurantes.find({grados:{$elemMatch:{grado:"A",puntaje:{$gt:20}}}}).limit(3)

2. ¿A cuántos documentos les faltan las coordenadas geográficas? En otras palabras, revisar si el tamaño de direccion.coord es 0 y contar.

    db.restaurantes.find({"direccion.coord": { $size: 0 }}).count()

3. Devolver nombre, barrio, tipo_cocina y grados para los primeros 3 restaurantes; de cada documento solo la última calificación. Ver el operador slice.

    db.restaurantes.find({},{nombre:1, barrio:1, tipo_cocina:1, grados:{$slice:-1}}).limit(3)

(falta popurri)